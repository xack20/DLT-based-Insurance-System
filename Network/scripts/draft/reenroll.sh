#!/bin/bash
# @Author: Zakaria Hossain Foysal
# @Date:   2024-05-28 12:18:23
# @Last Modified by:   Zakaria Hossain Foysal
# @Last Modified time: 2024-05-29 17:11:09
#!/bin/bash

# set -e  # Exit immediately if a command exits with a non-zero status

DIR="$(pwd)/../resources/"

ROOTDIR=$(cd "$(dirname "$0")" && pwd)
export PATH=${ROOTDIR}/../bin:${PWD}/../bin:$PATH
export FABRIC_CFG_PATH=${DIR}/../config

source "${DIR}scripts/utils.sh"

# export FABRIC_CA_CLIENT_BCCSP_DEFAULT=PKCS11
# export FABRIC_CA_CLIENT_BCCSP_PKCS11_LIBRARY=/usr/local/lib/softhsm/libsofthsm2.so
# export FABRIC_CA_CLIENT_BCCSP_PKCS11_PIN=11111111

# export FABRIC_CA_CLIENT_BCCSP_PKCS11_LABEL=ncp-wallet
# export FABRIC_CA_CLIENT_BCCSP_PKCS11_HASH=SHA2
# export FABRIC_CA_CLIENT_BCCSP_PKCS11_SECURITY=256

function createOrg1() {
  infoln "reenrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org1.example.com/

  export FABRIC_CA_CLIENT_HOME=${DIR}/organizations/peerOrganizations/org1.example.com/

  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey -u https://admin:adminpw@localhost:7054 --caname ca-org1 --tls.certfiles "${DIR}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null


  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${DIR}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts"
  cp "${DIR}/organizations/fabric-ca/org1/ca-cert.pem" "${DIR}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${DIR}/organizations/peerOrganizations/org1.example.com/tlsca"
  cp "${DIR}/organizations/fabric-ca/org1/ca-cert.pem" "${DIR}/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${DIR}/organizations/peerOrganizations/org1.example.com/ca"
  cp "${DIR}/organizations/fabric-ca/org1/ca-cert.pem" "${DIR}/organizations/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem"

  # export FABRIC_CA_CLIENT_BCCSP_DEFAULT=PKCS11
  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_PIN=11111111
  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_LIBRARY=/usr/local/lib/softhsm/libsofthsm2.so

  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_LABEL=ncp-wallet
  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_HASH=SHA2
  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_SECURITY=256

  infoln "Generating the Org1peer0 msp"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey -u https://peer0:peer0pw@localhost:7054 --caname ca-org1 -M "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp" --tls.certfiles "${DIR}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${DIR}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey -u https://peer0:peer0pw@localhost:7054 --caname ca-org1 -M "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org1.example.com --csr.hosts localhost --tls.certfiles "${DIR}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/tlscacerts/"* "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt"
  cp "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/signcerts/"* "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt"
  cp "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/keystore/"* "${DIR}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey -u https://user1:user1pw@localhost:7054 --caname ca-org1 -M "${DIR}/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp" --tls.certfiles "${DIR}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${DIR}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${DIR}/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey -u https://org1admin:org1adminpw@localhost:7054 --caname ca-org1 -M "${DIR}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp" --tls.certfiles "${DIR}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${DIR}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${DIR}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml"
}


function createOrg2() {
  infoln "reenrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org2.example.com/

  export FABRIC_CA_CLIENT_HOME=${DIR}/organizations/peerOrganizations/org2.example.com/

  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey   -u https://admin:adminpw@localhost:8054 --caname ca-org2 --tls.certfiles "${DIR}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null


  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org2's CA cert to org2's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${DIR}/organizations/peerOrganizations/org2.example.com/msp/tlscacerts"
  cp "${DIR}/organizations/fabric-ca/org2/ca-cert.pem" "${DIR}/organizations/peerOrganizations/org2.example.com/msp/tlscacerts/ca.crt"

  # Copy org2's CA cert to org2's /tlsca directory (for use by clients)
  mkdir -p "${DIR}/organizations/peerOrganizations/org2.example.com/tlsca"
  cp "${DIR}/organizations/fabric-ca/org2/ca-cert.pem" "${DIR}/organizations/peerOrganizations/org2.example.com/tlsca/tlsca.org2.example.com-cert.pem"

  # Copy org2's CA cert to org2's /ca directory (for use by clients)
  mkdir -p "${DIR}/organizations/peerOrganizations/org2.example.com/ca"
  cp "${DIR}/organizations/fabric-ca/org2/ca-cert.pem" "${DIR}/organizations/peerOrganizations/org2.example.com/ca/ca.org2.example.com-cert.pem"

  # export FABRIC_CA_CLIENT_BCCSP_DEFAULT=PKCS11
  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_PIN=11111111
  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_LIBRARY=/usr/local/lib/softhsm/libsofthsm2.so

  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_LABEL=ncp-wallet
  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_HASH=SHA2
  # export FABRIC_CA_CLIENT_BCCSP_PKCS11_SECURITY=256

  infoln "Generating the Org2peer0 msp"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey   -u https://peer0:peer0pw@localhost:8054 --caname ca-org2 -M "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp" --tls.certfiles "${DIR}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${DIR}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey   -u https://peer0:peer0pw@localhost:8054 --caname ca-org2 -M "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org2.example.com --csr.hosts localhost --tls.certfiles "${DIR}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/tlscacerts/"* "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt"
  cp "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/signcerts/"* "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt"
  cp "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/keystore/"* "${DIR}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey   -u https://user1:user1pw@localhost:8054 --caname ca-org2 -M "${DIR}/organizations/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp" --tls.certfiles "${DIR}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${DIR}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${DIR}/organizations/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey  -u https://org2admin:org2adminpw@localhost:8054 --caname ca-org2 -M "${DIR}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp" --tls.certfiles "${DIR}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${DIR}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${DIR}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/config.yaml"
}


function createOrderer() {
  infoln "reenrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/example.com

  export FABRIC_CA_CLIENT_HOME=${DIR}/organizations/ordererOrganizations/example.com

  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey   -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${DIR}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null


  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${DIR}/organizations/ordererOrganizations/example.com/msp/tlscacerts"
  cp "${DIR}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${DIR}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${DIR}/organizations/ordererOrganizations/example.com/tlsca"
  cp "${DIR}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${DIR}/organizations/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem"


  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey   -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp"  --tls.certfiles "${DIR}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${DIR}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey  -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls" --enrollment.profile tls --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${DIR}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt"
  cp "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/"* "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt"
  cp "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/keystore/"* "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts"
  cp "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${DIR}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client reenroll --csr.keyrequest.reusekey   -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${DIR}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp" --tls.certfiles "${DIR}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${DIR}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${DIR}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml"
}